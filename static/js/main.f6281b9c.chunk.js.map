{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setReverse","NONE","sortType","setSortType","visibleGoods","goods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","classNames","active","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,oEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAM,WACjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAuBMC,EArDR,SACEC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKT,EAASgB,QACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITb,GACFK,EAAaS,UAGRT,EA6BcU,CAAkBpB,EACrCQ,EAAUH,GAEZ,OACE,sBAAKgB,UAAU,MAAf,WACIlB,GACA,wBACEmB,KAAK,SACLC,QA7BK,WACXnB,GAAS,IA6BHiB,UAAU,oBAHZ,mBASDlB,GACC,qCACE,sBAAKkB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAjCe,WACzBd,EAAYV,EAASgB,UAiCXM,UAAWG,IACT,oBACA,CACEC,OAAQjB,IAAaT,EAASgB,UANpC,iCAaA,wBACEO,KAAK,SACLC,QA1CS,WACnBd,EAAYV,EAASkB,SA0CXI,UAAWG,IACT,oBACA,CACEC,OAAQjB,IAAaT,EAASkB,SANpC,4BAaA,wBACEK,KAAK,SACLC,QA/DI,WACdjB,GAAW,SAAAoB,GAAO,OAAKA,MA+DbL,UAAWG,IACT,oBACA,CACEC,QAAuB,IAAfpB,IANd,qBAaA,wBACEiB,KAAK,SACLC,QAhEE,WACZd,EAAYV,EAASQ,MACrBD,GAAW,IA+DDe,UAAU,6BAHZ,sBASF,oBAAIA,UAAU,QAAd,SACGX,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAeP,UAAU,cAAzB,SACGO,GADMA,eC/IvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6281b9c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const show = () => {\n    setStart(true);\n  };\n\n  const reverse = () => {\n    setReverse(current => !current);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer,\n    sortType, isReversed);\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          onClick={show}\n          className=\"button is-primary\"\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <div className=\"wrapper\">\n            <button\n              type=\"button\"\n              onClick={sortAlphabetically}\n              className={classNames(\n                'button is-primary',\n                {\n                  active: sortType === SortType.ALPABET,\n                },\n              )}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={sortByLength}\n              className={classNames(\n                'button is-primary',\n                {\n                  active: sortType === SortType.LENGTH,\n                },\n              )}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={reverse}\n              className={classNames(\n                'button is-primary',\n                {\n                  active: isReversed === true,\n                },\n              )}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={reset}\n              className=\"button is-primary is-light\"\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            {visibleGoods.map(good => (\n              <li key={good} className=\"Goods__item\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}